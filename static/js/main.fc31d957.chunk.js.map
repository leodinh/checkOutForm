{"version":3,"sources":["component/NetworkMessage/NetworkMessage.module.css","container/FormCheckout/FormCheckout.module.css","hoc/Aux/Aux.js","component/BasicInfo/BasicInfo.js","component/AddressInfo/AddressInfo.js","component/PaymentInfo/PaymentInfo.js","component/NetworkMessage/NetworkMessage.js","firebase/FireBaseRef.js","container/FormCheckout/FormCheckout.js","hooks/useNetworkStatusEffect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","BasicInfo","Aux","className","style","Content__Title","Content__Underlined","TextField","label","Content__Text","margin","onChange","change","defaultValue","value","firstName","helperText","undefined","error","onBlur","empty","lastName","InputLabel","id","Content__Label","FormControl","Content__Form","dietRestriction","Select","labelId","Content__Select","dietList","map","diet","MenuItem","key","FormHelperText","AddressInfo","city","province","provinceList","useStyles","makeStyles","paymentinfo_form","display","textAlign","marginLeft","paddingLeft","paymentinfo_checkbox","paymentinfo_method","marginTop","paymentinfo_radio","PaymentInfo","classes","FormLabel","component","RadioGroup","aria-label","payment","FormControlLabel","control","Radio","Checkbox","checked","agreeTerm","networkMessage","isOnline","Message_Error","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","databaseRef","database","ref","FormCheckout","useState","step","setStep","errorStatus","setErrorStatus","React","navigator","onLine","setIsOnline","useEffect","handleOnline","console","log","handleOffline","window","addEventListener","removeEventListener","useNetworkStatusEffect","loadingStatus","setLoadingStatus","localStorage","getItem","JSON","parse","infor","setInfor","handleInforChange","input","e","updatedInfo","target","checkEmpty","currentInfor","errors","Object","keys","reduce","object","submitForm","a","data","push","then","result","Promise","resolve","setTimeout","removeItem","setItem","stringify","basicInfoValue","addressInfoValue","paymentInfoValue","inValidFirstStep","inValidSecondStep","formContent","nextBtnStyle","styles","Button","Float_right","prevBtnStyle","Float_left","Form","Form__Title","Form__Content","NetworkMessage","IconButton","color","join","disabled","onClick","prevStep","variant","Clear","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc31d957.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message_Error\":\"NetworkMessage_Message_Error__2vVya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormCheckout_Form__1NVO9\",\"Form__Title\":\"FormCheckout_Form__Title__304Im\",\"Form__Content\":\"FormCheckout_Form__Content__3lx_k\",\"Clear\":\"FormCheckout_Clear__2bchy\",\"Float_right\":\"FormCheckout_Float_right__2wXxl\",\"Float_left\":\"FormCheckout_Float_left__1xFmN\",\"Content__Text\":\"FormCheckout_Content__Text__26Kmn\",\"Content__Title\":\"FormCheckout_Content__Title__1BfGl\",\"Content__Underlined\":\"FormCheckout_Content__Underlined__imK3w\",\"Content__Select\":\"FormCheckout_Content__Select__3GT05\",\"Content__Form\":\"FormCheckout_Content__Form__1E23b\",\"Content__Label\":\"FormCheckout_Content__Label__3PD9W\",\"Button\":\"FormCheckout_Button__NYSoQ\",\"enable\":\"FormCheckout_enable__3D6vQ\"};","const aux = props => props.children;\nexport default aux;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport style from \"../../container/FormCheckout/FormCheckout.module.css\";\nimport Aux from \"../../hoc/Aux/Aux\";\nconst BasicInfo = props => {\n  return (\n    <Aux>\n      <p className={style.Content__Title}>Basic Info</p>\n      <div className={style.Content__Underlined}></div>\n      <TextField\n        label=\"First Name\"\n        className={style.Content__Text}\n        margin=\"normal\"\n        onChange={props.change(\"firstName\")}\n        defaultValue={props.value.firstName}\n        helperText={\n          props.error.firstName !== undefined && props.value.firstName === \"\"\n            ? props.error.firstName\n            : \"\"\n        }\n        error={\n          props.error.firstName !== undefined && props.value.firstName === \"\"\n            ? true\n            : false\n        }\n        onBlur={props.empty(\"firstName\")}\n      />\n      <TextField\n        label=\"Last Name\"\n        className={style.Content__Text}\n        margin=\"normal\"\n        onChange={props.change(\"lastName\")}\n        defaultValue={props.value.lastName}\n        onBlur={props.empty(\"lastName\")}\n        helperText={\n          props.error.lastName !== undefined && props.value.lastName === \"\"\n            ? props.error.lastName\n            : \"\"\n        }\n        error={\n          props.error.lastName !== undefined && props.value.lastName === \"\"\n            ? true\n            : false\n        }\n      />\n      <InputLabel id=\"diet-label\" className={style.Content__Label}>\n        Diet Restriction\n      </InputLabel>\n      <FormControl\n        className={style.Content__Form}\n        error={\n          props.error.dietRestriction !== undefined &&\n          props.value.dietRestriction === \"\"\n            ? true\n            : false\n        }\n      >\n        <Select\n          labelId=\"diet-label\"\n          id=\"diet-select\"\n          value={props.value.dietRestriction}\n          className={style.Content__Select}\n          onChange={props.change(\"dietRestriction\")}\n          onBlur={props.empty(\"dietRestriction\")}\n        >\n          {props.dietList.map(diet => (\n            <MenuItem value={diet} key={diet}>\n              {diet}\n            </MenuItem>\n          ))}\n        </Select>\n        {props.error.dietRestriction !== undefined &&\n        props.value.dietRestriction === \"\" ? (\n          <FormHelperText>{props.error.dietRestriction}</FormHelperText>\n        ) : null}\n      </FormControl>\n    </Aux>\n  );\n};\nexport default BasicInfo;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport style from \"../../container/FormCheckout/FormCheckout.module.css\";\nconst AddressInfo = props => {\n  return (\n    <Aux>\n      <p className={style.Content__Title}>Address Info</p>\n      <div className={style.Content__Underlined}></div>\n      <TextField\n        label=\"City\"\n        className={style.Content__Text}\n        margin=\"normal\"\n        onChange={props.change(\"city\")}\n        defaultValue={props.value.city}\n        helperText={\n          props.error.city !== undefined && props.value.city === \"\"\n            ? props.error.city\n            : \"\"\n        }\n        error={\n          props.error.city !== undefined && props.value.city === \"\"\n            ? true\n            : false\n        }\n        onBlur={props.empty(\"city\")}\n      />\n      <InputLabel\n        id=\"demo-simple-select-label\"\n        className={style.Content__Label}\n      >\n        Province\n      </InputLabel>\n      <FormControl\n        className={style.Content__Form}\n        error={\n          props.error.province !== undefined && props.value.province\n            ? true\n            : false\n        }\n      >\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={props.value.province}\n          className={style.Content__Select}\n          onChange={props.change(\"province\")}\n        >\n          {props.provinceList.map(province => (\n            <MenuItem value={province} key={province}>\n              {province}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Aux>\n  );\n};\nexport default AddressInfo;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport style from \"../../container/FormCheckout/FormCheckout.module.css\";\nconst useStyles = makeStyles({\n  paymentinfo_form: {\n    display: \"block\",\n    textAlign: \"start\",\n    marginLeft: \"30px\",\n    paddingLeft: \"0px\"\n  },\n  paymentinfo_checkbox: {\n    paddingLeft: \"0px\"\n  },\n  paymentinfo_method: {\n    marginTop: \"20px\",\n    textAlign: \"start\",\n    marginLeft: \"30px\"\n  },\n  paymentinfo_radio: {\n    marginLeft: \"30px\"\n  }\n});\nconst PaymentInfo = props => {\n  const classes = useStyles();\n  return (\n    <Aux>\n      <p className={style.Content__Title}>Payment Info</p>\n      <div className={style.Content__Underlined}></div>\n      <FormLabel component=\"legend\" className={classes.paymentinfo_method}>\n        Payment method\n      </FormLabel>\n      <RadioGroup\n        aria-label=\"payment\"\n        value={props.value.payment}\n        onChange={props.change(\"payment\")}\n        className={classes.paymentinfo_radio}\n      >\n        <FormControlLabel value=\"Bitcoin\" control={<Radio />} label=\"Bitcoin\" />\n        <FormControlLabel value=\"Paypal\" control={<Radio />} label=\"Paypal\" />\n        <FormControlLabel\n          value=\"Credit Card\"\n          control={<Radio />}\n          label=\"Credit Card\"\n        />\n      </RadioGroup>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={props.value.agreeTerm}\n            onChange={props.change(\"agreeTerm\")}\n            className={classes.paymentinfo_checkbox}\n          />\n        }\n        label=\"I agree to the Terms & Conditions\"\n        className={classes.paymentinfo_form}\n      />\n    </Aux>\n  );\n};\nexport default PaymentInfo;\n","import React from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport style from \"./NetworkMessage.module.css\";\nconst networkMessage = props => {\n  return (\n    <Aux>\n      {!props.isOnline && (\n        <div className={style.Message_Error}>\n          \"You are offline. Go online to save the data\"\n        </div>\n      )}\n    </Aux>\n  );\n};\nexport default networkMessage;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDhoC6fIwWM_gHE7Z5zHn8cADTyCo62XzQ\",\n  authDomain: \"blockchain-news-cf255.firebaseapp.com\",\n  databaseURL: \"https://blockchain-news-cf255.firebaseio.com\",\n  projectId: \"blockchain-news-cf255\",\n  storageBucket: \"blockchain-news-cf255.appspot.com\",\n  messagingSenderId: \"154674766076\",\n  appId: \"1:154674766076:web:783a77f9c265e59a3fb779\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const databaseRef = firebase.database().ref(\"checkout\");\n","import React, { useState, useEffect } from \"react\";\nimport BasicInfo from \"../../component/BasicInfo/BasicInfo\";\nimport AddressInfo from \"../../component/AddressInfo/AddressInfo\";\nimport PaymentInfo from \"../../component/PaymentInfo/PaymentInfo\";\nimport NetworkMessage from \"../../component/NetworkMessage/NetworkMessage\";\nimport styles from \"./FormCheckout.module.css\";\nimport { databaseRef } from \"../../firebase/FireBaseRef\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport useNetworkStatusEffect from \"../../hooks/useNetworkStatusEffect\";\nfunction FormCheckout() {\n  const [step, setStep] = useState(1);\n  const [dietList, setDietList] = useState([\n    \"None\",\n    \"Vegan\",\n    \"Vegetarian\",\n    \"Halal/Kosher\"\n  ]);\n  const [provinceList, setProvinceList] = useState([\n    \"Alberta\",\n    \"British Columbia\",\n    \"Manitoba\",\n    \"New Brunswick\",\n    \"Newfoundland\",\n    \"Nova Scotia\",\n    \"Ontario\",\n    \"Prince Edward Island\",\n    \"Quebec\",\n    \"Saskatchewan\"\n  ]);\n  const [errorStatus, setErrorStatus] = useState({});\n  const { isOnline } = useNetworkStatusEffect();\n  const [loadingStatus, setLoadingStatus] = useState(\"Submit\");\n  const [infor, setInfor] = useState(\n    localStorage.getItem(\"infor\")\n      ? JSON.parse(localStorage.getItem(\"infor\"))\n      : {\n          firstName: \"\",\n          lastName: \"\",\n          dietRestriction: \"\",\n          city: \"\",\n          province: \"\",\n          payment: \"\",\n          agreeTerm: false\n        }\n  );\n  const nextStep = () => {\n    setStep(prevStep => prevStep + 1);\n  };\n  const prevStep = () => {\n    setStep(prevStep => prevStep - 1);\n  };\n  const handleInforChange = input => e => {\n    const updatedInfo = { ...infor };\n    input === \"agreeTerm\"\n      ? (updatedInfo[input] = e.target.checked)\n      : (updatedInfo[input] = e.target.value);\n    setInfor(updatedInfo);\n  };\n  const checkEmpty = input => e => {\n    const currentInfor = { ...infor };\n    let errors = { ...errorStatus };\n    if (currentInfor[input] === \"\") {\n      errors[input] = \"Please enter \" + input;\n    } else if (\n      errors[input] !== undefined &&\n      currentInfor[input] !== undefined\n    ) {\n      errors = Object.keys(errors).reduce((object, key) => {\n        if (key !== input) {\n          object[key] = errors[key];\n        }\n        return object;\n      }, {});\n    }\n    setErrorStatus(errors);\n  };\n  const submitForm = async () => {\n    const data = { ...infor };\n    databaseRef\n      .push(data)\n      .then(\n        result =>\n          new Promise(resolve => {\n            setLoadingStatus(\"Saving....\");\n            resolve(\"Saved\");\n          })\n      )\n      .then(result => {\n        setTimeout(() => {\n          setLoadingStatus(result);\n          localStorage.removeItem(\"infor\");\n        }, 3000);\n      });\n  };\n  useEffect(() => {\n    const currentInfor = { ...infor };\n    localStorage.setItem(\"infor\", JSON.stringify(currentInfor));\n  }, [infor]);\n  const {\n    firstName,\n    lastName,\n    dietRestriction,\n    city,\n    province,\n    payment,\n    agreeTerm\n  } = infor;\n  const basicInfoValue = { firstName, lastName, dietRestriction };\n  const addressInfoValue = { city, province };\n  const paymentInfoValue = { payment, agreeTerm };\n  const inValidFirstStep =\n    step === 1 &&\n    (firstName === \"\" || lastName === \"\" || dietRestriction === \"\");\n  const inValidSecondStep = step === 2 && (city === \"\" || province === \"\");\n  let formContent = null;\n  let nextBtnStyle = [styles.Button, styles.Float_right];\n  let prevBtnStyle = [styles.Button, styles.Float_left];\n  switch (step) {\n    case 1:\n      formContent = (\n        <BasicInfo\n          change={handleInforChange}\n          dietList={dietList}\n          value={basicInfoValue}\n          empty={checkEmpty}\n          error={errorStatus}\n        />\n      );\n      break;\n    case 2:\n      formContent = (\n        <AddressInfo\n          change={handleInforChange}\n          provinceList={provinceList}\n          value={addressInfoValue}\n          empty={checkEmpty}\n          error={errorStatus}\n        />\n      );\n      break;\n    case 3:\n      formContent = (\n        <PaymentInfo\n          isOnline={isOnline}\n          change={handleInforChange}\n          value={paymentInfoValue}\n        />\n      );\n      break;\n    default:\n      formContent = null;\n      break;\n  }\n  return (\n    <form className={styles.Form}>\n      <p className={styles.Form__Title}>Checkout</p>\n      <div className={styles.Form__Content}>{formContent}</div>\n\n      <NetworkMessage isOnline={isOnline} />\n      {step < 3 && (\n        <IconButton\n          color=\"primary\"\n          aria-label=\"Next\"\n          className={nextBtnStyle.join(\" \")}\n          disabled={inValidFirstStep || inValidSecondStep ? true : false}\n          onClick={nextStep}\n        >\n          <NavigateNextIcon />\n        </IconButton>\n      )}\n      {step === 3 && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={payment === \"\" || agreeTerm === false || isOnline === false}\n          className={styles.Button}\n          onClick={submitForm}\n        >\n          {loadingStatus}\n        </Button>\n      )}\n      {step > 1 && (\n        <IconButton\n          color=\"primary\"\n          aria-label=\"Previous\"\n          className={prevBtnStyle.join(\" \")}\n          onClick={prevStep}\n        >\n          <NavigateBeforeIcon />\n        </IconButton>\n      )}\n      <div className={styles.Clear}></div>\n    </form>\n  );\n}\nexport default FormCheckout;\n","import React from \"react\";\n\nexport default function useNetworkStatusEffect() {\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n  React.useEffect(() => {\n    const handleOnline = () => {\n      console.log(\"Network connection is online\");\n      setIsOnline(true);\n    };\n    const handleOffline = () => {\n      console.log(\"Network connection is offline\");\n      setIsOnline(false);\n    };\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return {\n    isOnline\n  };\n}\n","import React from \"react\";\nimport FormCheckout from \"./container/FormCheckout/FormCheckout\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <FormCheckout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}